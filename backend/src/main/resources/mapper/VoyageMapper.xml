<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shipping.mapper.VoyageMapper">

    <!-- 结果映射 -->
    <resultMap id="VoyageResultMap" type="com.shipping.model.entity.Voyage">
        <id column="id" property="id"/>
        <result column="voyage_number" property="voyageNumber"/>
        <result column="route_id" property="routeId"/>
        <result column="ship_id" property="shipId"/>
        <result column="departure_date" property="departureDate"/>
        <result column="arrival_date" property="arrivalDate"/>
        <result column="actual_departure_date" property="actualDepartureDate"/>
        <result column="actual_arrival_date" property="actualArrivalDate"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <!-- 包含港口信息的结果映射 -->
    <resultMap id="VoyageWithPortsResultMap" type="com.shipping.model.entity.Voyage">
        <id column="v_id" property="id"/>
        <result column="v_voyage_number" property="voyageNumber"/>
        <result column="v_route_id" property="routeId"/>
        <result column="v_ship_id" property="shipId"/>
        <result column="v_departure_date" property="departureDate"/>
        <result column="v_arrival_date" property="arrivalDate"/>
        <result column="v_actual_departure_date" property="actualDepartureDate"/>
        <result column="v_actual_arrival_date" property="actualArrivalDate"/>
        <result column="v_status" property="status"/>
        <result column="v_created_at" property="createdAt"/>
        <result column="v_updated_at" property="updatedAt"/>
        
        <!-- 关联航线信息（包含港口信息） -->
        <association property="route" javaType="com.shipping.model.entity.Route">
            <id column="r_id" property="id"/>
            <result column="r_route_number" property="routeNumber"/>
            <result column="r_name" property="name"/>
            <result column="r_origin_port_id" property="originPortId"/>
            <result column="r_destination_port_id" property="destinationPortId"/>
            <result column="r_distance" property="distance"/>
            <result column="r_distance_nm" property="distanceNm"/>
            <result column="r_estimated_duration" property="estimatedDuration"/>
            <result column="r_status" property="status"/>
            
            <!-- 出发港口信息 -->
            <association property="originPort" javaType="com.shipping.model.entity.Port">
                <id column="op_id" property="id"/>
                <result column="op_name_cn" property="nameCn"/>
                <result column="op_name_en" property="nameEn"/>
                <result column="op_code" property="code"/>
                <result column="op_country" property="country"/>
                <result column="op_latitude" property="latitude"/>
                <result column="op_longitude" property="longitude"/>
            </association>
            
            <!-- 目的港口信息 -->
            <association property="destinationPort" javaType="com.shipping.model.entity.Port">
                <id column="dp_id" property="id"/>
                <result column="dp_name_cn" property="nameCn"/>
                <result column="dp_name_en" property="nameEn"/>
                <result column="dp_code" property="code"/>
                <result column="dp_country" property="country"/>
                <result column="dp_latitude" property="latitude"/>
                <result column="dp_longitude" property="longitude"/>
            </association>
        </association>
    </resultMap>

    <!-- 包含关联信息的结果映射 -->
    <resultMap id="VoyageWithDetailsResultMap" type="com.shipping.model.entity.Voyage">
        <id column="v_id" property="id"/>
        <result column="v_voyage_number" property="voyageNumber"/>
        <result column="v_route_id" property="routeId"/>
        <result column="v_ship_id" property="shipId"/>
        <result column="v_departure_date" property="departureDate"/>
        <result column="v_arrival_date" property="arrivalDate"/>
        <result column="v_actual_departure_date" property="actualDepartureDate"/>
        <result column="v_actual_arrival_date" property="actualArrivalDate"/>
        <result column="v_status" property="status"/>
        <result column="v_created_at" property="createdAt"/>
        <result column="v_updated_at" property="updatedAt"/>
        
        <!-- 关联航线信息 -->
        <association property="route" javaType="com.shipping.model.entity.Route">
            <id column="r_id" property="id"/>
            <result column="r_route_number" property="routeNumber"/>
            <result column="r_name" property="name"/>
            <result column="r_origin_port_id" property="originPortId"/>
            <result column="r_destination_port_id" property="destinationPortId"/>
            <result column="r_distance" property="distance"/>
            <result column="r_distance_nm" property="distanceNm"/>
            <result column="r_estimated_duration" property="estimatedDuration"/>
            <result column="r_status" property="status"/>
        </association>
        
        <!-- 关联船舶信息 -->
        <association property="ship" javaType="com.shipping.model.entity.Ship">
            <id column="s_id" property="id"/>
            <result column="s_name" property="name"/>
            <result column="s_type_cn" property="typeCn"/>
            <result column="s_type_en" property="typeEn"/>
            <result column="s_flag" property="flag"/>
            <result column="s_mmsi" property="mmsi"/>
            <result column="s_imo_number" property="imoNumber"/>
            <result column="s_gross_tonnage" property="grossTonnage"/>
            <result column="s_deadweight_tonnage" property="deadweightTonnage"/>
            <result column="s_status" property="status"/>
        </association>
    </resultMap>

    <!-- 插入航次 -->
    <insert id="insert" parameterType="com.shipping.model.entity.Voyage" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO voyages (
            voyage_number, route_id, ship_id, departure_date, arrival_date,
            actual_departure_date, actual_arrival_date, status, created_at, updated_at
        ) VALUES (
            #{voyageNumber}, #{routeId}, #{shipId}, #{departureDate}, #{arrivalDate},
            #{actualDepartureDate}, #{actualArrivalDate}, #{status}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <!-- 根据ID删除航次 -->
    <delete id="deleteById" parameterType="Long">
        DELETE FROM voyages WHERE id = #{id}
    </delete>

    <!-- 根据ID更新航次 -->
    <update id="updateById" parameterType="com.shipping.model.entity.Voyage">
        UPDATE voyages SET
            voyage_number = #{voyageNumber},
            route_id = #{routeId},
            ship_id = #{shipId},
            departure_date = #{departureDate},
            arrival_date = #{arrivalDate},
            actual_departure_date = #{actualDepartureDate},
            actual_arrival_date = #{actualArrivalDate},
            status = #{status},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 根据ID查询航次 -->
    <select id="selectById" parameterType="Long" resultMap="VoyageResultMap">
        SELECT * FROM voyages WHERE id = #{id}
    </select>

    <!-- 根据ID查询航次详情（包含航线和港口信息） -->
    <select id="selectByIdWithDetails" parameterType="Long" resultMap="VoyageWithPortsResultMap">
        SELECT 
            v.id as v_id,
            v.voyage_number as v_voyage_number,
            v.route_id as v_route_id,
            v.ship_id as v_ship_id,
            v.departure_date as v_departure_date,
            v.arrival_date as v_arrival_date,
            v.actual_departure_date as v_actual_departure_date,
            v.actual_arrival_date as v_actual_arrival_date,
            v.status as v_status,
            v.created_at as v_created_at,
            v.updated_at as v_updated_at,
            
            r.id as r_id,
            r.route_number as r_route_number,
            r.name as r_name,
            r.origin_port_id as r_origin_port_id,
            r.destination_port_id as r_destination_port_id,
            r.distance as r_distance,
            r.distance_nm as r_distance_nm,
            r.estimated_duration as r_estimated_duration,
            r.status as r_status,
            
            op.id as op_id,
            op.name_cn as op_name_cn,
            op.name_en as op_name_en,
            op.code as op_code,
            op.country as op_country,
            op.latitude as op_latitude,
            op.longitude as op_longitude,
            
            dp.id as dp_id,
            dp.name_cn as dp_name_cn,
            dp.name_en as dp_name_en,
            dp.code as dp_code,
            dp.country as dp_country,
            dp.latitude as dp_latitude,
            dp.longitude as dp_longitude
            
        FROM voyages v
        LEFT JOIN routes r ON v.route_id = r.id
        LEFT JOIN ports op ON r.origin_port_id = op.id
        LEFT JOIN ports dp ON r.destination_port_id = dp.id
        WHERE v.id = #{id}
    </select>

    <!-- 根据航次编号查询航次 -->
    <select id="selectByVoyageNumber" parameterType="String" resultMap="VoyageResultMap">
        SELECT * FROM voyages WHERE voyage_number = #{voyageNumber}
    </select>

    <!-- 检查航次编号是否存在 -->
    <select id="existsByVoyageNumber" resultType="boolean">
        SELECT COUNT(1) > 0 FROM voyages 
        WHERE voyage_number = #{voyageNumber}
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <!-- 分页查询航次列表 -->
    <select id="selectPageList" parameterType="com.shipping.model.dto.VoyageQueryRequest" resultMap="VoyageResultMap">
        SELECT * FROM voyages
        <where>
            <if test="voyageNumber != null and voyageNumber != ''">
                AND voyage_number LIKE CONCAT('%', #{voyageNumber}, '%')
            </if>
            <if test="routeId != null">
                AND route_id = #{routeId}
            </if>
            <if test="shipId != null">
                AND ship_id = #{shipId}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="startDate != null">
                AND departure_date >= #{startDate}
            </if>
            <if test="endDate != null">
                AND departure_date <![CDATA[<=]]> #{endDate}
            </if>
        </where>
        ORDER BY departure_date DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 分页查询航次列表（包含关联信息） -->
    <select id="selectPageListWithDetails" parameterType="com.shipping.model.dto.VoyageQueryRequest" resultMap="VoyageWithDetailsResultMap">
        SELECT 
            v.id as v_id,
            v.voyage_number as v_voyage_number,
            v.route_id as v_route_id,
            v.ship_id as v_ship_id,
            v.departure_date as v_departure_date,
            v.arrival_date as v_arrival_date,
            v.actual_departure_date as v_actual_departure_date,
            v.actual_arrival_date as v_actual_arrival_date,
            v.status as v_status,
            v.created_at as v_created_at,
            v.updated_at as v_updated_at,
            
            r.id as r_id,
            r.route_number as r_route_number,
            r.name as r_name,
            r.origin_port_id as r_origin_port_id,
            r.destination_port_id as r_destination_port_id,
            r.distance as r_distance,
            r.distance_nm as r_distance_nm,
            r.estimated_duration as r_estimated_duration,
            r.status as r_status,
            
            s.id as s_id,
            s.name as s_name,
            s.type_cn as s_type_cn,
            s.type_en as s_type_en,
            s.flag as s_flag,
            s.mmsi as s_mmsi,
            s.imo_number as s_imo_number,
            s.gross_tonnage as s_gross_tonnage,
            s.deadweight_tonnage as s_deadweight_tonnage,
            s.status as s_status
            
        FROM voyages v
        LEFT JOIN routes r ON v.route_id = r.id
        LEFT JOIN ships s ON v.ship_id = s.id
        <where>
            <if test="voyageNumber != null and voyageNumber != ''">
                AND v.voyage_number LIKE CONCAT('%', #{voyageNumber}, '%')
            </if>
            <if test="routeId != null">
                AND v.route_id = #{routeId}
            </if>
            <if test="shipId != null">
                AND v.ship_id = #{shipId}
            </if>
            <if test="status != null and status != ''">
                AND v.status = #{status}
            </if>
            <if test="startDate != null">
                AND v.departure_date >= #{startDate}
            </if>
            <if test="endDate != null">
                AND v.departure_date <![CDATA[<=]]> #{endDate}
            </if>
        </where>
        ORDER BY v.departure_date DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 查询总数 -->
    <select id="selectTotal" parameterType="com.shipping.model.dto.VoyageQueryRequest" resultType="long">
        SELECT COUNT(*) FROM voyages
        <where>
            <if test="voyageNumber != null and voyageNumber != ''">
                AND voyage_number LIKE CONCAT('%', #{voyageNumber}, '%')
            </if>
            <if test="routeId != null">
                AND route_id = #{routeId}
            </if>
            <if test="shipId != null">
                AND ship_id = #{shipId}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="startDate != null">
                AND departure_date >= #{startDate}
            </if>
            <if test="endDate != null">
                AND departure_date <![CDATA[<=]]> #{endDate}
            </if>
        </where>
    </select>

    <!-- 获取所有启用的航次 -->
    <select id="selectAllActive" resultMap="VoyageResultMap">
        SELECT * FROM voyages 
        WHERE status IN ('PLANNED', 'IN_PROGRESS')
        ORDER BY departure_date ASC
    </select>

    <!-- 根据航线ID查询航次列表 -->
    <select id="selectByRouteId" parameterType="Long" resultMap="VoyageResultMap">
        SELECT * FROM voyages 
        WHERE route_id = #{routeId}
        ORDER BY departure_date DESC
    </select>

    <!-- 根据船舶ID查询航次列表 -->
    <select id="selectByShipId" parameterType="Long" resultMap="VoyageResultMap">
        SELECT * FROM voyages 
        WHERE ship_id = #{shipId}
        ORDER BY departure_date DESC
    </select>

    <!-- 更新航次状态 -->
    <update id="updateStatus">
        UPDATE voyages SET 
            status = #{status}, 
            updated_at = NOW()
        WHERE id = #{id}
    </update>

</mapper> 