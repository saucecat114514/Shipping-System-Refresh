<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shipping.mapper.AuditLogMapper">

    <!-- 结果映射 -->
    <resultMap id="AuditLogResultMap" type="com.shipping.model.entity.AuditLog">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="user_role" property="userRole"/>
        <result column="operation" property="operation"/>
        <result column="module" property="module"/>
        <result column="method" property="method"/>
        <result column="request_url" property="requestUrl"/>
        <result column="request_method" property="requestMethod"/>
        <result column="request_params" property="requestParams"/>
        <result column="client_ip" property="clientIp"/>
        <result column="user_agent" property="userAgent"/>
        <result column="result" property="result"/>
        <result column="error_msg" property="errorMsg"/>
        <result column="response_time" property="responseTime"/>
        <result column="operation_time" property="operationTime"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>

    <!-- 新增审计日志 -->
    <insert id="insertAuditLog" parameterType="com.shipping.model.entity.AuditLog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO audit_logs (
            username, user_role, operation, module, method,
            request_url, request_method, request_params, client_ip, user_agent,
            result, error_msg, response_time, operation_time, created_at
        ) VALUES (
            #{username}, #{userRole}, #{operation}, #{module}, #{method},
            #{requestUrl}, #{requestMethod}, #{requestParams}, #{clientIp}, #{userAgent},
            #{result}, #{errorMsg}, #{responseTime}, #{operationTime}, #{createdAt}
        )
    </insert>

    <!-- 根据ID查询审计日志 -->
    <select id="selectAuditLogById" parameterType="long" resultMap="AuditLogResultMap">
        SELECT * FROM audit_logs WHERE id = #{id}
    </select>

    <!-- 分页查询审计日志 -->
    <select id="selectAuditLogList" parameterType="com.shipping.model.dto.AuditLogQueryRequest" resultMap="AuditLogResultMap">
        SELECT * FROM audit_logs
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="userRole != null and userRole != ''">
                AND user_role = #{userRole}
            </if>
            <if test="operation != null and operation != ''">
                AND operation = #{operation}
            </if>
            <if test="module != null and module != ''">
                AND module = #{module}
            </if>
            <if test="requestMethod != null and requestMethod != ''">
                AND request_method = #{requestMethod}
            </if>
            <if test="result != null and result != ''">
                AND result = #{result}
            </if>
            <if test="clientIp != null and clientIp != ''">
                AND client_ip LIKE CONCAT('%', #{clientIp}, '%')
            </if>
            <if test="startTime != null">
                AND operation_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND operation_time <= #{endTime}
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="sortBy == 'username'">username</when>
            <when test="sortBy == 'operation'">operation</when>
            <when test="sortBy == 'module'">module</when>
            <when test="sortBy == 'result'">result</when>
            <when test="sortBy == 'responseTime'">response_time</when>
            <when test="sortBy == 'createdAt'">created_at</when>
            <otherwise>operation_time</otherwise>
        </choose>
        <choose>
            <when test="sortOrder == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{pageSize} * (#{pageNum} - 1)
    </select>

    <!-- 查询审计日志总数 -->
    <select id="countAuditLogs" parameterType="com.shipping.model.dto.AuditLogQueryRequest" resultType="int">
        SELECT COUNT(*) FROM audit_logs
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="userRole != null and userRole != ''">
                AND user_role = #{userRole}
            </if>
            <if test="operation != null and operation != ''">
                AND operation = #{operation}
            </if>
            <if test="module != null and module != ''">
                AND module = #{module}
            </if>
            <if test="requestMethod != null and requestMethod != ''">
                AND request_method = #{requestMethod}
            </if>
            <if test="result != null and result != ''">
                AND result = #{result}
            </if>
            <if test="clientIp != null and clientIp != ''">
                AND client_ip LIKE CONCAT('%', #{clientIp}, '%')
            </if>
            <if test="startTime != null">
                AND operation_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND operation_time <= #{endTime}
            </if>
        </where>
    </select>

    <!-- 批量删除过期的审计日志 -->
    <delete id="deleteExpiredLogs" parameterType="int">
        DELETE FROM audit_logs 
        WHERE operation_time <= DATE_SUB(NOW(), INTERVAL #{retentionDays} DAY)
    </delete>

    <!-- 获取用户操作统计 -->
    <select id="getUserOperationStats" resultType="map">
        SELECT 
            operation,
            COUNT(*) as count,
            AVG(response_time) as avg_response_time
        FROM audit_logs 
        WHERE username = #{username}
        AND operation_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY operation
        ORDER BY count DESC
    </select>

    <!-- 获取系统操作统计 -->
    <select id="getSystemOperationStats" resultType="map">
        SELECT 
            operation,
            COUNT(*) as count,
            AVG(response_time) as avg_response_time
        FROM audit_logs 
        WHERE operation_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY operation
        ORDER BY count DESC
    </select>

    <!-- 获取模块操作统计 -->
    <select id="getModuleOperationStats" resultType="map">
        SELECT 
            module,
            COUNT(*) as count,
            AVG(response_time) as avg_response_time
        FROM audit_logs 
        WHERE operation_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY module
        ORDER BY count DESC
    </select>

    <!-- 获取错误操作统计 -->
    <select id="getErrorOperationStats" resultType="map">
        SELECT 
            module,
            operation,
            COUNT(*) as count,
            error_msg
        FROM audit_logs 
        WHERE result = 'ERROR'
        AND operation_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY module, operation, error_msg
        ORDER BY count DESC
    </select>

</mapper> 